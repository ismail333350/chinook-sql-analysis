-- What is the total revenue generated by the store?
SELECT 
    SUM(total) AS total_revenue 
FROM invoice;


-- What is the average invoice total across all customers?
SELECT 
    ROUND(AVG(total), 2) AS total_revenue 
FROM invoice;


-- Which countries contributed the most to total sales?
SELECT 
    c.country,
    SUM(i.total)
FROM customer c 
INNER JOIN invoice i ON c.customer_id = i.customer_id
GROUP BY c.country
ORDER BY SUM(i.total) DESC;


-- Who are the top 10 customers by total purchase amount?
SELECT 
    c.first_name || ' ' || c.last_name AS name,
    SUM(i.total)
FROM customer c 
INNER JOIN invoice i ON c.customer_id = i.customer_id
GROUP BY name
ORDER BY SUM(i.total) DESC 
LIMIT 10;


-- What are the top employees (sales reps) in terms of revenue generated?
SELECT 
    e.first_name || ' ' || e.last_name AS employee_name,
    SUM(i.total) AS total_revenue
FROM employee e 
INNER JOIN customer c ON e.employee_id = c.support_rep_id
INNER JOIN invoice i ON c.customer_id = i.customer_id
GROUP BY employee_name
ORDER BY SUM(i.total) DESC;


-- What is the average invoice total for each customer?
SELECT  
    c.first_name || ' ' || c.last_name AS name,
    ROUND(AVG(i.total) OVER (PARTITION BY c.customer_id), 2)
FROM customer c 
INNER JOIN invoice i ON c.customer_id = i.customer_id;


-- Which year and month had the highest total sales?
SELECT 
    TO_CHAR(invoice_date, 'YYYY') AS year,
    TO_CHAR(invoice_date, 'Mon') AS month,
    SUM(total)
FROM invoice
GROUP BY year, month
ORDER BY SUM(total) DESC;


-- Which genres generate the most revenue overall?
SELECT 
    g.name,
    SUM(i.total)
FROM genre g 
INNER JOIN track t ON g.genre_id = t.genre_id
INNER JOIN invoice_line il ON t.track_id = il.track_id
INNER JOIN invoice i ON il.invoice_id = i.invoice_id
GROUP BY g.name;


-- What are the top 10 most purchased tracks?
SELECT 
    t.name AS track,
    COUNT(*) AS purchases
FROM track t 
INNER JOIN invoice_line il ON t.track_id = il.track_id
INNER JOIN invoice i ON i.invoice_id = il.invoice_id
GROUP BY t.name
ORDER BY purchases DESC
LIMIT 10;


-- Which album has the most tracks sold?
SELECT 
    a.title AS album,
    COUNT(*) AS purchases
FROM track t  
INNER JOIN album a ON a.album_id = t.album_id
INNER JOIN invoice_line il ON t.track_id = il.track_id
INNER JOIN invoice i ON i.invoice_id = il.invoice_id
GROUP BY album
ORDER BY purchases DESC;


-- Which media type (e.g., MPEG audio, AAC, etc.) is most popular among customers?
SELECT 
    mt.name AS media_type,
    COUNT(*) AS purchases
FROM track t 
INNER JOIN media_type mt ON mt.media_type_id = t.media_type_id
INNER JOIN invoice_line il ON t.track_id = il.track_id
INNER JOIN invoice i ON i.invoice_id = il.invoice_id
GROUP BY media_type
ORDER BY purchases DESC;


-- What is the average track unit price and how does it vary by genre?
SELECT 
    ROUND(AVG(t.unit_price), 2) AS average,
    g.name AS genre
FROM genre g 
INNER JOIN track t ON g.genre_id = t.genre_id
GROUP BY genre;


-- Which customers made the most purchases (by count of invoices)?
SELECT 
    c.first_name || ' ' || c.last_name AS customer_name,
    COUNT(*) AS purchase_freq
FROM customer c 
INNER JOIN invoice i ON i.customer_id = c.customer_id
GROUP BY customer_name
ORDER BY purchase_freq DESC;


-- What is the average number of tracks per invoice for each customer?
SELECT 
    c.first_name || ' ' || c.last_name AS customer_name,
    ROUND(AVG(track_count), 2) AS avg_tracks_per_invoice
FROM (
    SELECT 
        i.invoice_id,
        i.customer_id,
        COUNT(il.track_id) AS track_count
    FROM invoice i
    INNER JOIN invoice_line il ON i.invoice_id = il.invoice_id
    GROUP BY i.invoice_id, i.customer_id
) AS invoice_summary
INNER JOIN customer c ON c.customer_id = invoice_summary.customer_id
GROUP BY customer_name
ORDER BY avg_tracks_per_invoice DESC;


-- Are there customers who have never made a second purchase?
SELECT 
    c.first_name || ' ' || c.last_name AS customer_name,
    COUNT(i.invoice_id) AS total_purchases
FROM customer c
LEFT JOIN invoice i ON i.customer_id = c.customer_id
GROUP BY customer_name
HAVING COUNT(i.invoice_id) = 1
ORDER BY customer_name;


-- Which countries have the highest number of active customers?
SELECT 
    country,
    COUNT(customer_id) AS active_customers
FROM customer
GROUP BY country
ORDER BY active_customers DESC;


-- How many customers are assigned to each sales representative?
SELECT 
    e.first_name || ' ' || e.last_name AS employee_name,
    COUNT(*) AS assigned_customers
FROM employee e 
INNER JOIN customer c ON e.employee_id = c.support_rep_id
GROUP BY employee_name
ORDER BY assigned_customers DESC;


-- Which employees have the highest average invoice total among their customers?
SELECT 
    ROUND(SUM(avg_revenue), 2),
    t.employee_name
FROM (
    SELECT 
        e.first_name || ' ' || e.last_name AS employee_name,
        c.first_name || ' ' || c.last_name AS customer_name,
        AVG(i.total) AS avg_revenue
    FROM employee e 
    INNER JOIN customer c ON e.employee_id = c.support_rep_id
    INNER JOIN invoice i ON c.customer_id = i.customer_id
    GROUP BY employee_name, customer_name  
    ORDER BY avg_revenue DESC
) AS t
GROUP BY t.employee_name;


-- Compare Domestic vs. International Sales
SELECT 
    CASE 
        WHEN billing_country = 'USA' THEN 'Domestic'
        ELSE 'International'
    END AS sales_region,
    ROUND(SUM(total), 2) AS total_sales
FROM invoice
GROUP BY sales_region
ORDER BY total_sales DESC;


-- Identify Top 5 Countries by Number of Customers
SELECT 
    country,
    COUNT(customer_id) AS total_customers
FROM customer
GROUP BY country
ORDER BY total_customers DESC
LIMIT 5;
